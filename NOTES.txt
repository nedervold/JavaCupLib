I see that parser.java calls into the implicit interface of emit, so
for reproducibility's sake, we'll need to edit parser.cup and to
regenerate parser.java.

To remove globals (statics):

  * Added an instance() call.

  * Changed protected to private, or public if necessary.  Since this
    is a one-package project with little inheritance, protected
    essentially means public.  I reduced access to private whenever
    possible to see what's calling what.

  * Renamed all the public static calls, so other classes are calling
    the new name.  Duplicate each of them with the old name and
    reimplement the new call to call the old one through instance().

 * Inline all the new calls.

 * Make public static variables non-static.  Once non-static,
   encapsulate the variables.

 * Extract an interface so we can talk to that.

 * Separate the access (instance()) from the data.

------------------------------------------------------------

TODO:

* The pascal specification has one conflict and needs to be run with
  expect to succeed.  Allow passing flags into runJavaCup.  Perhaps
  keep it as is, too, to demo a failing run.

